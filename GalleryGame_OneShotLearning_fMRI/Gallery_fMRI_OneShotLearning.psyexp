<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2021.2.3">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'session': '001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="list"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save hdf5 file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1536, 864]" valType="list"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="0.0000, 0.0000, 0.0000" valType="color"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="elAddress" updates="None" val="100.1.1.1" valType="str"/>
    <Param name="elDataFiltering" updates="None" val="FILTER_LEVEL_2" valType="str"/>
    <Param name="elLiveFiltering" updates="None" val="FILTER_LEVEL_OFF" valType="str"/>
    <Param name="elModel" updates="None" val="EYELINK 1000 DESKTOP" valType="str"/>
    <Param name="elPupilAlgorithm" updates="None" val="ELLIPSE_FIT" valType="str"/>
    <Param name="elPupilMeasure" updates="None" val="PUPIL_AREA" valType="str"/>
    <Param name="elSampleRate" updates="None" val="1000" valType="num"/>
    <Param name="elSimMode" updates="None" val="False" valType="bool"/>
    <Param name="elTrackEyes" updates="None" val="RIGHT_EYE" valType="str"/>
    <Param name="elTrackingMode" updates="None" val="PUPIL_CR_TRACKING" valType="str"/>
    <Param name="expName" updates="None" val="Gallery_fMRI_OneShotLearning" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="eyetracker" updates="None" val="None" valType="str"/>
    <Param name="gpAddress" updates="None" val="127.0.0.1" valType="str"/>
    <Param name="gpPort" updates="None" val="4242" valType="num"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="mgBlink" updates="None" val="('MIDDLE_BUTTON',)" valType="list"/>
    <Param name="mgMove" updates="None" val="CONTINUOUS" valType="str"/>
    <Param name="mgSaccade" updates="None" val="0.5" valType="num"/>
    <Param name="tbLicenseFile" updates="None" val="" valType="str"/>
    <Param name="tbModel" updates="None" val="" valType="str"/>
    <Param name="tbSampleRate" updates="None" val="60" valType="num"/>
    <Param name="tbSerialNo" updates="None" val="" valType="str"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <KeyboardComponent name="key_resp_1">
        <Param name="allowedKeys" updates="constant" val="'1','2','3'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_1" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <ImageComponent name="image">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$StimFile" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.125)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1, 0.75)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="Arrow">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$ArrowImg" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="Arrow" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.375)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="total_corr=0&amp;#10;total_all=0&amp;#10;rt=0&amp;#10;&amp;#10;Congruency = []&amp;#10;#Outcome = []" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="total_corr = 0;&amp;#10;total_all = 0;&amp;#10;rt = 0;&amp;#10;Congruency = [];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if (key_resp_1.corr) {&amp;#10;    total_corr = (total_corr + 1);&amp;#10;    total_all = (total_all + 1);&amp;#10;    rt = key_resp_1.rt;&amp;#10;} else {&amp;#10;    total_all = (total_all + 1);&amp;#10;    rt = key_resp_1.rt;&amp;#10;}&amp;#10;if ((Direction === ArrowImg)) {&amp;#10;    Congruency = &quot;Congruent&quot;;&amp;#10;} else {&amp;#10;    if (((Direction === &quot;ArrowLeft.png&quot;) &amp;&amp; (ArrowImg === &quot;ArrowRight.png&quot;))) {&amp;#10;        Congruency = &quot;Incongruent_opposite&quot;;&amp;#10;    } else {&amp;#10;        if (((Direction === &quot;ArrowRight.png&quot;) &amp;&amp; (ArrowImg === &quot;ArrowLeft.png&quot;))) {&amp;#10;            Congruency = &quot;Incongruent_opposite&quot;;&amp;#10;        } else {&amp;#10;            if ((Direction === &quot;neutral&quot;)) {&amp;#10;                Congruency = &quot;Neutral&quot;;&amp;#10;            } else {&amp;#10;                Congruency = &quot;Incongruent_perpendicular&quot;;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if key_resp_1.corr:&amp;#10;  total_corr=total_corr+1&amp;#10;  total_all=total_all+1&amp;#10;  rt=key_resp_1.rt&amp;#10;&amp;#10;else:&amp;#10;  total_all=total_all+1&amp;#10;  rt=key_resp_1.rt&amp;#10;&amp;#10;#if key_resp_1.keys == 1 and ArrowImg == 'ArrowLeft.png':&amp;#10;    #Outcome=1&amp;#10;#else:&amp;#10;    #Outcome=0&amp;#10;&amp;#10;if Direction == ArrowImg:&amp;#10;    Congruency='Congruent'&amp;#10;elif Direction == 'ArrowLeft.png' and ArrowImg == 'ArrowRight.png': &amp;#10;    Congruency='Incongruent_opposite'&amp;#10;elif Direction == 'ArrowRight.png' and ArrowImg == 'ArrowLeft.png':&amp;#10;    Congruency='Incongruent_opposite'&amp;#10;elif Direction == 'neutral':&amp;#10;    Congruency='Neutral'&amp;#10;else:&amp;#10;    Congruency='Incongruent_perpendicular'&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;Congruency&quot;, Congruency);&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="#thisExp.addData('Outcome', Outcome)&amp;#10;thisExp.addData('Congruency', Congruency)" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="fix_cross">
      <PolygonComponent name="polygon">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="white" valType="color"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="white" valType="color"/>
        <Param name="lineWidth" updates="constant" val="1" valType="num"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="polygon" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="shape" updates="None" val="cross" valType="str"/>
        <Param name="size" updates="constant" val="(0.5, 0.5)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
    </Routine>
    <Routine name="Uncued_trial">
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'1','2','3'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <ImageComponent name="image_2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$StimFile" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_2" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.125)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1, 0.75)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if (key_resp_2.corr) {&amp;#10;    total_corr = (total_corr + 1);&amp;#10;    total_all = (total_all + 1);&amp;#10;    rt = key_resp_2.rt;&amp;#10;} else {&amp;#10;    total_all = (total_all + 1);&amp;#10;    rt = key_resp_2.rt;&amp;#10;}&amp;#10;if ((Direction === ArrowImg)) {&amp;#10;    Congruency = &quot;Congruent&quot;;&amp;#10;} else {&amp;#10;    if (((Direction === &quot;ArrowLeft.png&quot;) &amp;&amp; (ArrowImg === &quot;ArrowRight.png&quot;))) {&amp;#10;        Congruency = &quot;Incongruent_opposite&quot;;&amp;#10;    } else {&amp;#10;        if (((Direction === &quot;ArrowRight.png&quot;) &amp;&amp; (ArrowImg === &quot;ArrowLeft.png&quot;))) {&amp;#10;            Congruency = &quot;Incongruent_opposite&quot;;&amp;#10;        } else {&amp;#10;            if ((Direction === &quot;neutral&quot;)) {&amp;#10;                Congruency = &quot;Neutral&quot;;&amp;#10;            } else {&amp;#10;                Congruency = &quot;Incongruent_perpendicular&quot;;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if key_resp_2.corr:&amp;#10;  total_corr=total_corr+1&amp;#10;  total_all=total_all+1&amp;#10;  rt=key_resp_2.rt&amp;#10;&amp;#10;else:&amp;#10;  total_all=total_all+1&amp;#10;  rt=key_resp_2.rt&amp;#10;&amp;#10;if Direction == ArrowImg:&amp;#10;    Congruency='Congruent'&amp;#10;elif Direction == 'ArrowLeft.png' and ArrowImg == 'ArrowRight.png': &amp;#10;    Congruency='Incongruent_opposite'&amp;#10;elif Direction == 'ArrowRight.png' and ArrowImg == 'ArrowLeft.png':&amp;#10;    Congruency='Incongruent_opposite'&amp;#10;elif Direction == 'neutral':&amp;#10;    Congruency='Neutral'&amp;#10;else:&amp;#10;    Congruency='Incongruent_perpendicular'" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;Congruency&quot;, Congruency);&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="thisExp.addData('Congruency', Congruency)" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
      <ImageComponent name="direction_options">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="Gallery_arrowoptions.png" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="direction_options" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.375)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1, 0.250)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="Finished">
      <TextComponent name="text_2">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="num"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Bra jobbat!&amp;#10;&amp;#10;Du har slutfört uppgiften. &amp;#10;Fortsätt ligga stilla så kommer vi prata med dig alldeles strax." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="Randomization">
      <CodeComponent name="code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="listA=[]" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="listA = [];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="listA.push(StimFile);&amp;#10;console.log(listA);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="listA.append(StimFile)&amp;#10;# Use listA.append(StimFile) if colA is text&amp;#10;&amp;#10;# Note that in this case loading_loop&amp;#10;# is using rows 0:10 and has nReps = 3&amp;#10;# to make a list of 30 numbers. If&amp;#10;# colA and colB have the same length or&amp;#10;# come from different spreadsheets, use&amp;#10;# rows should be blank with nReps = 1&amp;#10;&amp;#10;print(listA)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="Trial_scrambled">
      <ImageComponent name="Scrambled_img">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Scrambled" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="Scrambled_img" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.125)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1, 0.75)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="Arrow1">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$ArrowImg" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="Arrow1" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.375)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="fMRI_trigger">
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'s'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <PolygonComponent name="polygon_2">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="white" valType="color"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="white" valType="color"/>
        <Param name="lineWidth" updates="constant" val="1" valType="num"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="polygon_2" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="None" val="cross" valType="str"/>
        <Param name="size" updates="constant" val="(0.5, 0.5)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
    </Routine>
    <Routine name="Instructions1">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Instruktioner:&amp;#10;&amp;#10;Du kommer att se bilder presenterade en i taget ovanför en pil som pekar antingen åt vänster, uppåt eller höger.&amp;#10;Din uppgift är att memorera bilden tillsammans med pilens riktning.&amp;#10;&amp;#10;Svara på varje bild och pilens riktning med hjälp av följande knappar:&amp;#10;1 (pekfinger) = Vänster&amp;#10;2 (långfinger) = Upp&amp;#10;3 (ringfinger) = Höger&amp;#10;&amp;#10;Andra gången du ser varje bild kommer det inte att vara en pil utan tre pilar markerade i orange vilket indikerar att du ska välja den riktning på pilen som du minns tidigare presenterades under den aktuella bilden.&amp;#10;&amp;#10;I början och slutet av uppgiften kommer du att se brusiga bilder.&amp;#10;Titta bara på bilderna utan att trycka på någon knapp.&amp;#10;&amp;#10;Tryck med pekfingret och meddela när du är redo att börja." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_0">
        <Param name="allowedKeys" updates="constant" val="'1','2','3','space'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_0" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_randomizer">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="import csv&amp;#10;import random&amp;#10;&amp;#10;Arrow_list = []&amp;#10;Img_list = []&amp;#10;ImgType_list = []&amp;#10;Direction_list = []&amp;#10;&amp;#10;with open(&quot;OneShotLearning.csv&quot;, &quot;r&quot;) as csv_file:&amp;#10;    csv_reader = csv.DictReader(csv_file, delimiter=',')&amp;#10;    for lines in csv_reader:&amp;#10;      Arrow_list.append(lines['ArrowImg'])&amp;#10;      Img_list.append(lines['StimFile'])&amp;#10;      ImgType_list.append(lines['ImgType'])&amp;#10;      Direction_list.append(lines['Direction'])&amp;#10;      &amp;#10;    #ShuffledArrow_list = shuffle(Arrow_list)&amp;#10;    shuffle(Arrow_list)&amp;#10;        &amp;#10;    with open('OneShotLearning_Shuffled.csv', 'w') as csvfile:&amp;#10;        fieldnames = ['StimFile','ImgType','ArrowImg','Direction']&amp;#10;        writer = csv.DictWriter(csvfile, fieldnames=fieldnames, lineterminator = '\n')&amp;#10;        writerA = csv.writer(csvfile, delimiter=',', lineterminator = '\n')&amp;#10;        writer.writeheader()&amp;#10;        for i in range(48):&amp;#10;            writerA.writerow([Img_list[i], ImgType_list[i], Arrow_list[i], Direction_list[i]])&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_randomizer" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="Instructions2">
      <TextComponent name="text_3">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="10" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Instructions:&amp;#10;&amp;#10;You will see images presented one at a time above an arrow pointing either left, up or right.&amp;#10;Your task is to memorize the image together with the direction of the arrow. &amp;#10;&amp;#10;Respond to each image and arrow using the following buttons:&amp;#10;1 (index finger) = Left&amp;#10;2 (middle finger) = Up&amp;#10;3 (ring finger) = Right&amp;#10;&amp;#10;The second time you see each image there will not be one arrow but three highlighted in orange indicating that you may choose the direction you recall was previously presented below the current image." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="Instructions3">
      <TextComponent name="text_4">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="text_4" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="10" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="You will see noisy images presented one at a time above an arrow pointing either left, up or right.&amp;#10;Your task is to look at the image and respond to each image and arrow using the following buttons:&amp;#10;&amp;#10;1 (index finger) = Left&amp;#10;2 (middle finger) = Up&amp;#10;3 (ring finger) = Right" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Instructions1"/>
    <Routine name="fMRI_trigger"/>
    <Routine name="Trial_scrambled"/>
    <Routine name="fix_cross"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'Condition_rows': '0:4'}, {'Condition_rows': '4:8'}, {'Condition_rows': '8:12'}, {'Condition_rows': '12:16'}, {'Condition_rows': '16:20'}, {'Condition_rows': '20:24'}, {'Condition_rows': '24:28'}, {'Condition_rows': '28:32'}, {'Condition_rows': '32:36'}, {'Condition_rows': '36:40'}, {'Condition_rows': '40:44'}, {'Condition_rows': '44:48'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="OneShotLearning_conditions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="Cued">
      <Param name="Selected rows" updates="None" val="$Condition_rows" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('StimFile', 'Image/armadillo.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/bat.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/cat.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/cheetah.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/cow.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/crocodile.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/dromedary.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/elephant.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/giraffe.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/hippopotamus.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/horse.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/kangaroo.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/lioness.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/lynx.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/platypus.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/rhino.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/snake.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/tapir.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/tiger.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/turtle.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/zebra.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/boat.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/bus.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/car.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/cart.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/motorbike.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/paragliding.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/plane.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/scooter.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/ship.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/skateboard.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/tractor.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/train.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/van.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/armchair.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/bed.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/bedside_table.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/bookcase.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/chair.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/Chest_of_drawers.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/couch.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/filling_cabinet.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/lamp.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/lectern.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/rocking_chair.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/sofa.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/stool.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/table.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowUp.png')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="OneShotLearning_Shuffled.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="Cued" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="fix_cross"/>
    <LoopTerminator name="Cued"/>
    <LoopInitiator loopType="TrialHandler" name="Uncued">
      <Param name="Selected rows" updates="None" val="$Condition_rows" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('StimFile', 'Image/armadillo.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/bat.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/cat.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/cheetah.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/cow.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/crocodile.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/dromedary.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/elephant.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/giraffe.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/hippopotamus.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/horse.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowLeft.png')]), OrderedDict([('StimFile', 'Image/kangaroo.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/lioness.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/lynx.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/platypus.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/rhino.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/snake.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/tapir.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/tiger.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/turtle.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/zebra.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/boat.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/bus.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/car.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'neutral')]), OrderedDict([('StimFile', 'Image/cart.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/motorbike.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/paragliding.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/plane.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/scooter.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/ship.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/skateboard.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/tractor.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/train.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/van.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowRight.png')]), OrderedDict([('StimFile', 'Image/armchair.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/bed.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/bedside_table.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/bookcase.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/chair.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/Chest_of_drawers.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/couch.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/filling_cabinet.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/lamp.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/lectern.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/rocking_chair.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/sofa.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/stool.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('Direction', 'ArrowUp.png')]), OrderedDict([('StimFile', 'Image/table.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('Direction', 'ArrowUp.png')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="OneShotLearning_Shuffled.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="Uncued" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Uncued_trial"/>
    <Routine name="fix_cross"/>
    <LoopTerminator name="Uncued"/>
    <LoopTerminator name="trials"/>
    <LoopInitiator loopType="TrialHandler" name="ScrambledTrials_2">
      <Param name="Selected rows" updates="None" val="13:25" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('corrAns', 1), ('StimFile', 'Images/armadillo.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', 'left'), ('Direction', 'ArrowLeft.png'), ('Scrambled', 'Images/armadillo_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/bat.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', 'left'), ('Direction', 'ArrowLeft.png'), ('Scrambled', 'Images/bat_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/cat.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'ArrowLeft.png'), ('Scrambled', 'Images/cat_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/cheetah.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'ArrowLeft.png'), ('Scrambled', 'Images/cheetah_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/cow.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'ArrowLeft.png'), ('Scrambled', 'Images/cow_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/crocodile.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', 'right'), ('Direction', 'ArrowLeft.png'), ('Scrambled', 'Images/crocodile_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/dromedary.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'ArrowLeft.png'), ('Scrambled', 'Images/dromedary_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/elephant.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'ArrowLeft.png'), ('Scrambled', 'Images/elephant_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/giraffe.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'ArrowLeft.png'), ('Scrambled', 'Images/giraffe_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/hippopotamus.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'ArrowLeft.png'), ('Scrambled', 'Images/hippopotamus_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/horse.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'ArrowLeft.png'), ('Scrambled', 'Images/horse_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/kangaroo.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/kangaroo_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/lioness.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/lioness_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/lynx.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/lynx_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/platypus.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/platypus_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/rhino.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/rhino_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/snake.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/snake_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/tapir.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/tapir_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/tiger.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/tiger_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/turtle.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/turtle_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/zebra.jpg'), ('ImgType', 'Animal'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/zebra_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/boat.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/boat_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/bus.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/bus_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/car.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'neutral'), ('Scrambled', 'Images/car_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/cart.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'ArrowRight.png'), ('Scrambled', 'Images/cart_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/motorbike.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'ArrowRight.png'), ('Scrambled', 'Images/motorbike_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/paragliding.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'ArrowRight.png'), ('Scrambled', 'Images/paragliding_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/plane.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'ArrowRight.png'), ('Scrambled', 'Images/plane_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/scooter.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'ArrowRight.png'), ('Scrambled', 'Images/scooter_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/ship.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'ArrowRight.png'), ('Scrambled', 'Images/ship_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/skateboard.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'ArrowRight.png'), ('Scrambled', 'Images/skateboard_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/tractor.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'ArrowRight.png'), ('Scrambled', 'Images/tractor_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/train.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'ArrowRight.png'), ('Scrambled', 'Images/train_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/van.jpg'), ('ImgType', 'Vehicles'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'ArrowRight.png'), ('Scrambled', 'Images/van_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/armchair.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/armchair_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/bed.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/bed_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/bedside_table.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/bedside_table_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/bookcase.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', 'neutral'), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/bookcase_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/chair.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/chair_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/Chest_of_drawers.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/Chest_of_drawers_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/couch.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/couch_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/filling_cabinet.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/filling_cabinet_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/lamp.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/lamp_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/lectern.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/lectern_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/rocking_chair.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/rocking_chair_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 1), ('StimFile', 'Images/sofa.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowLeft.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/sofa_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 3), ('StimFile', 'Images/stool.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowRight.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/stool_scrambled.jpg'), ('old', None)]), OrderedDict([('corrAns', 2), ('StimFile', 'Images/table.jpg'), ('ImgType', 'Furniture'), ('ArrowImg', 'ArrowUp.png'), ('ImgOrientation', None), ('Direction', 'ArrowUp.png'), ('Scrambled', 'Images/table_scrambled.jpg'), ('old', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="OneShotLearning.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="ScrambledTrials_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Trial_scrambled"/>
    <Routine name="fix_cross"/>
    <LoopTerminator name="ScrambledTrials_2"/>
    <Routine name="Finished"/>
  </Flow>
</PsychoPy2experiment>
